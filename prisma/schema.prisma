generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
}


model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String    @unique
  phone          String
  password       String
  role           Role      @default(BASIC)
  createdAt      DateTime  @default(now()) @db.Date
  updateAt       DateTime  @updatedAt @db.Date
  Product        Product?
  sendMessages   Message[] @relation("sendMessages")
  receivMessages Message[] @relation("receivMessages")

  @@index([email])
}

model Product {
  id            String          @id @default(uuid())
  type          Type
  title         String
  description   String
  pricePerDay   Int
  pricePerHour  Int
  city          String
  street        String
  houseNumber   Int
  images        String[]
  model         String
  hasHelmet     Boolean
  batteryWatts  Int
  author        User            @relation(fields: [authorId], references: [id])
  authorId      String          @unique
  createdAt     DateTime        @default(now()) @db.Date
  updateAt      DateTime        @updatedAt @db.Date
  Message       Message[]
  AvailableSlot AvailableSlot[]
}

model Message {
  id         String   @id @default(uuid())
  date       String
  hours      String[]
  content    String
  fromUser   User     @relation("sendMessages", fields: [fromUserId], references: [id])
  fromUserId String
  toUser     User     @relation("receivMessages", fields: [toUserId], references: [id])
  toUserId   String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  status     Status   @default(PENDING)
  createdAt  DateTime @default(now()) @db.Date
  updateAt   DateTime @updatedAt @db.Date
}

model AvailableSlot {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  date      DateTime
  hour      String
}

enum Role {
  BASIC
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Type {
  BICYCLE
  SCOOTER
}
